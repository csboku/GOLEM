install.packages("rgdal")
install.packages("terra")
install.packages("raster")
install.packages("viridis")
install.packages("openair")
install.packages("ggplot2")
1+1
3*4
3^3
load("/home/cschmidt/projects/attaino3/code/bias_christos/intermediate_files/obsdata")
obs
load("/home/cschmidt/projects/attaino3/code/bias_christos/intermediate_files/att_hist_rcp26_o3_t2_fixed")
install.packages("jsonlite")
install.packages("languageserver")
load("/home/cschmidt/projects/attaino3/code/bias_christos/intermediate_files/att_hist_rcp26_o3_t2_fixed")
obs
mod_f_O3_ugm3
library(terra)
library(RColorBrewer)
#library(ggplot2)
#library(fields)
library(s2dv)
library(terra)
library(terra)
datadir <- "/home/cschmidt/data/modis/vcf/"
list.files(datadir)
list.files(datadir,pattern = "*.tif")
list.files(datadir,pattern = "*.tif",full.names = T)
input_f <- list.files(datadir,pattern = "*.tif",full.names = F)
library(terra)
datadir <- "/home/cschmidt/data/modis/vcf/"
input_files <- list.files(datadir,pattern = "*.tif",full.names = T)
input_f <- list.files(datadir,pattern = "*.tif",full.names = F)
rast(input_files[1])
evap_in <- rast(input_files[1])
evap_in$Percent_TreeCover
writeCDF(evap_in,"test.nc")
source("~/projects/ignite/code/woodcat.R", echo=TRUE)
rast("~/data/ignite/BFW_Waldkarte/BFW_Waldkarte.gfs")
library(sf)
st_read("~/data/ignite/BFW_Waldkarte/BFW_Waldkarte.gfs")
install.packages("cffdrs")
trace(fwi)
trace(fwi())
library(terra)
library(sf)
#library(stars)
library(rgdal)
woodcat <- st_read("~/data/ignite/BFW_Waldkarte/BFW_Waldkarte.gml")
crs(woodcat)
crs("epsg:4326", describe=TRUE)
crs(woodcat) <- crs("epsg:4326", describe=TRUE)
crs(woodcat) <- "epsg:4326"
vect("~/data/ignite/BFW_Waldkarte/treecat.shp")
woodshape <- vect("~/data/ignite/BFW_Waldkarte/treecat.shp")
crs(woodshape) <- "epsg:4326"
terra::writeVector(woodshape,"~/data/ignite/BFW_Waldkarte/treecat_wgs.shp")
library(terra)
library(sf)
#library(stars)
library(rgdal)
woodcat <- st_read("~/data/ignite/BFW_Waldkarte/BFW_Waldkarte.gml")
crs(woodcat)
crs(woodcat) <- "epsg:4326"
woodshape <- vect("~/data/ignite/BFW_Waldkarte/treecat.shp")
crs(woodshape)
plot(woodshape)
png("woodshape.png")
plot(woodshape)
dev.off()
crs(woodshape) <- "epsg:4326"
woodshape
woodshape@ptr
coords(woodshape)
crs(woodshape)
woodshape <- vect("~/data/ignite/BFW_Waldkarte/treecat.shp")
crs(woodshape)
library(terra)
library(sf)
#library(stars)
library(rgdal)
?project
terra::project(woodshape,"epsg:4326")
woodshape_latlon <- terra::project(woodshape,"epsg:4326")
png("woodshape_latlon.png")
plot(woodshape_latlon)
dev.off()
library(raster)
library(terra)
library(raster)
library(terra)
install.packages("raster")
install.packages("terra")
install.packages("TIDYVERSE")
install.packages("tidyverse")
install.packages("dplyr")
install.packages("ggplot2")
### Divide exc sum by 10
exc_path <- "~/data/attain/bias_corr_output_exc/ysum/"
### Divide exc sum by 10
exc_path <- "~/data/attain/bias_corr_output_exc/ysum/"
exc_f <- list.files(exc_path,full.names = T,pattern = d5)
exc_f <- list.files(exc_path,full.names = T,pattern = "d5")
exc_f
### Divide exc sum by 10
exc_path <- "~/data/attain/bias_corr_output_exc/ysu/"
exc_f <- list.files(exc_path,full.names = T,pattern = "d5")
### Divide exc sum by 10
exc_path <- "~/data/attain/bias_corr_output_exc/ysum"
exc_f <- list.files(exc_path,full.names = T,pattern = "d5")
exc_f
exc_f <- list.files(exc_path,full.names = F,pattern = "d5")
exc_files <- list.files(exc_path,full.names = F,pattern = "d5")
### Divide exc sum by 10
exc_path <- "~/data/attain/bias_corr_output_exc/ysum"
exc_f <- list.files(exc_path,full.names = T,pattern = "d5")
exc_files <- list.files(exc_path,full.names = F,pattern = "d5")
### Divide exc sum by 10
exc_path <- "~/data/attain/bias_corr_output_exc/ysum"
outdir <- "~/data/attain/bias_corr_output_mda8/ysum"
exc_f <- list.files(exc_path,full.names = T,pattern = "d5")
exc_files <- list.files(exc_path,full.names = F,pattern = "d5")
for (i in c(1:length(mda_f))) {
cdo("subc,10",mda_f[i],paste0(outdir,"div",mda_files[i]))
}
### Divide exc sum by 10
exc_path <- "~/data/attain/bias_corr_output_exc/ysum"
outdir <- "~/data/attain/bias_corr_output_mda8/ysum"
exc_f <- list.files(exc_path,full.names = T,pattern = "d5")
exc_files <- list.files(exc_path,full.names = F,pattern = "d5")
for (i in c(1:length(mda_f))) {
cdo("subc,10",exc_f[i],paste0(outdir,"div",exc_files[i]))
}
exc_f <- list.files(exc_path,full.names = T,pattern = "d5")
exc_files <- list.files(exc_path,full.names = F,pattern = "d5")
for (i in c(1:length(exc_f))) {
cdo("subc,10",exc_f[i],paste0(outdir,"div",exc_files[i]))
}
library(ClimateOperators)
library(ClimateOperators)
library(ClimateOperators)
### Divide exc sum by 10
exc_path <- "~/data/attain/bias_corr_output_exc/ysum"
outdir <- "~/data/attain/bias_corr_output_mda8/ysum"
exc_f <- list.files(exc_path,full.names = T,pattern = "d5")
exc_files <- list.files(exc_path,full.names = F,pattern = "d5")
for (i in c(1:length(exc_f))) {
cdo("subc,10",exc_f[i],paste0(outdir,"div",exc_files[i]))
}
paste0(outdir,"div",exc_files[i])
### Divide exc sum by 10
exc_path <- "~/data/attain/bias_corr_output_exc/timsum"
outdir <- "~/data/attain/bias_corr_output_exc/timsum"
exc_f <- list.files(exc_path,full.names = T,pattern = "d5")
exc_files <- list.files(exc_path,full.names = F,pattern = "d5")
for (i in c(1:length(exc_f))) {
cdo("subc,10",exc_f[i],paste0(outdir,"div",exc_files[i]))
}
outdir <- "~/data/attain/bias_corr_output_exc/timsum/"
exc_f <- list.files(exc_path,full.names = T,pattern = "d5")
exc_files <- list.files(exc_path,full.names = F,pattern = "d5")
for (i in c(1:length(exc_f))) {
cdo("subc,10",exc_f[i],paste0(outdir,"div",exc_files[i]))
}
### Divide exc sum by 10
exc_path <- "~/data/attain/bias_corr_output_exc/seasum"
### Divide exc sum by 10
exc_path <- "~/data/attain/bias_corr_output_exc/seasum"
outdir <- "~/data/attain/bias_corr_output_exc/seasum/"
exc_f <- list.files(exc_path,full.names = T,pattern = "d5")
exc_files <- list.files(exc_path,full.names = F,pattern = "d5")
for (i in c(1:length(exc_f))) {
cdo("subc,10",exc_f[i],paste0(outdir,"div",exc_files[i]))
}
for (i in c(1:length(exc_f))) {
cdo("divc,10",exc_f[i],paste0(outdir,"div",exc_files[i]))
}
library(ClimateOperators)
### Divide exc sum by 10
exc_path <- "~/data/attain/bias_corr_output_exc/seasum"
outdir <- "~/data/attain/bias_corr_output_exc/seasum/"
exc_f <- list.files(exc_path,full.names = T,pattern = "d5")
exc_files <- list.files(exc_path,full.names = F,pattern = "d5")
for (i in c(1:length(exc_f))) {
cdo("divc,10",exc_f[i],paste0(outdir,"div",exc_files[i]))
}
### Divide exc sum by 10
exc_path <- "~/data/attain/bias_corr_output_exc/seasum"
outdir <- "~/data/attain/bias_corr_output_exc/seasum/"
exc_f <- list.files(exc_path,full.names = T,pattern = "d5")
exc_files <- list.files(exc_path,full.names = F,pattern = "d5")
### Divide exc sum by 10
exc_path <- "~/data/attain/bias_corr_output_exc/seasum"
outdir <- "~/data/attain/bias_corr_output_exc/seasum/"
exc_f <- list.files(exc_path,full.names = T,pattern = "d5")
exc_files <- list.files(exc_path,full.names = F,pattern = "d5")
for (i in c(1:length(exc_f))) {
cdo("divc,10",exc_f[i],paste0(outdir,"div",exc_files[i]))
}
### Divide exc sum by 10
exc_path <- "~/data/attain/bias_corr_output_exc/seasum"
outdir <- "~/data/attain/bias_corr_output_exc/seasum/"
exc_f <- list.files(exc_path,full.names = T,pattern = "d5")
exc_files <- list.files(exc_path,full.names = F,pattern = "d5")
for (i in c(1:length(exc_f))) {
cdo("divc,10",exc_f[i],paste0(outdir,"div",exc_files[i]))
}
### Divide exc sum by 10
exc_path <- "~/data/attain/bias_corr_output_exc/timsum/"
outdir <- "~/data/attain/bias_corr_output_exc/timsum/"
exc_f <- list.files(exc_path,full.names = T,pattern = "d5")
exc_files <- list.files(exc_path,full.names = F,pattern = "d5")
for (i in c(1:length(exc_f))) {
cdo("divc,10",exc_f[i],paste0(outdir,"div",exc_files[i]))
}
library(terra)
library(sf)
library(st)
library(sf)
library(terra)
library(sf)
install.packages("sf")
library(sf)
remove.packages("sf")
remove.packages(sf)
library(terra)
o3_files <- list.files("~/data/future_capacity/munic_csv/o3mda8/")
o3_f <- list.files("~/data/future_capacity/munic_csv/o3mda8/",full.names = T)
t2_files <- list.files("~/data/future_capacity/munic_csv/t2/")
t2_f <- list.files("~/data/future_capacity/munic_csv/t2/",full.names = T)
t2_files
t2max_files <- list.files("~/data/future_capacity/munic_csv/t2_max/")
t2max_f <- list.files("~/data/future_capacity/munic_csv/t2_max/",full.names = T)
##### Tmax 30
outdir <- "~/data/future_capacity/munic_csv/tmax_30exc/"
for (i in c(1:length(t2max_f))){
print(i)
csv_in <- read.csv(t2max_f[i])
csv_in[,-1] <- sapply(csv_in[,-1], function(x) ifelse(x > 30, 1, 0))
write.csv(csv_in,paste0(outdir,substr(t2max_files[1],1,nchar(t2max_files[1])-4),"_exc30.csv"),row.names = F)
}
##### Tmax 35
outdir <- "~/data/future_capacity/munic_csv/tmax_35exc/"
for (i in c(1:length(t2max_f))){
print(i)
csv_in <- read.csv(t2max_f[i])
csv_in[,-1] <- sapply(csv_in[,-1], function(x) ifelse(x > 35, 1, 0))
write.csv(csv_in,paste0(outdir,substr(t2max_files[1],1,nchar(t2max_files[1])-4),"_exc35.csv"),row.names = F)
}
##### Tmin 20
outdir <- "~/data/future_capacity/munic_csv/tmin_20exc/"
for (i in c(1:length(t2min_f))){
print(i)
csv_in <- read.csv(t2min_f[i])
csv_in[,-1] <- sapply(csv_in[,-1], function(x) ifelse(x > 20, 1, 0))
write.csv(csv_in,paste0(outdir,substr(t2min_files[1],1,nchar(t2min_files[1])-4),"_exc20.csv"),row.names = F)
}
t2min_files <- list.files("~/data/future_capacity/munic_csv/t2_min/")
t2min_f <- list.files("~/data/future_capacity/munic_csv/t2_min/",full.names = T)
for (i in c(1:length(t2min_f))){
print(i)
csv_in <- read.csv(t2min_f[i])
csv_in[,-1] <- sapply(csv_in[,-1], function(x) ifelse(x > 20, 1, 0))
write.csv(csv_in,paste0(outdir,substr(t2min_files[1],1,nchar(t2min_files[1])-4),"_exc20.csv"),row.names = F)
}
##### Calculate exceedances for o3
outdir <- "~/data/future_capacity/munic_csv/o3mda8_exc/"
for (i in c(1:length(o3_f))){
print(i)
csv_in <- read.csv(o3_f[i])
csv_in[,-1] <- sapply(csv_in[,-1], function(x) ifelse(x > 120, 1, 0))
write.csv(csv_in,paste0(outdir,substr(o3_files[i],1,nchar(o3_files[i])-4),"_exc120.csv"),row.names = F)
}
##### Tmax 30
outdir <- "~/data/future_capacity/munic_csv/tmax_30exc/"
for (i in c(1:length(t2max_f))){
print(i)
csv_in <- read.csv(t2max_f[i])
csv_in[,-1] <- sapply(csv_in[,-1], function(x) ifelse(x > 30, 1, 0))
write.csv(csv_in,paste0(outdir,substr(t2max_files[i],1,nchar(t2max_files[i])-4),"_exc30.csv"),row.names = F)
}
##### Tmax 35
outdir <- "~/data/future_capacity/munic_csv/tmax_35exc/"
for (i in c(1:length(t2max_f))){
print(i)
csv_in <- read.csv(t2max_f[i])
csv_in[,-1] <- sapply(csv_in[,-1], function(x) ifelse(x > 35, 1, 0))
write.csv(csv_in,paste0(outdir,substr(t2max_files[i],1,nchar(t2max_files[i])-4),"_exc35.csv"),row.names = F)
}
##### Tmin 20
outdir <- "~/data/future_capacity/munic_csv/tmin_20exc/"
for (i in c(1:length(t2min_f))){
print(i)
csv_in <- read.csv(t2min_f[i])
csv_in[,-1] <- sapply(csv_in[,-1], function(x) ifelse(x > 20, 1, 0))
write.csv(csv_in,paste0(outdir,substr(t2min_files[i],1,nchar(t2min_files[i])-4),"_exc20.csv"),row.names = F)
}
####### Calculate yearle sum of exceedances
datadir <- "~/data/future_capacity/munic_csv/"
list.files(datadirm,recursive = T)
list.files(datadir,recursive = T)
list.files(datadir,recursive = T,full.names = T)
inp_files <- list.files(datadir,recursive = T,full.names = T)
inp_files <- list.files(datadir,recursive = T,full.names = F)
strsplit(inp_files,"/")
inp_files <- strsplit(inp_files,"/")
inp_files[[2]]
inp_files[1,]
inp_files[1]
sapply(inp_files, "[[", 2)
inp_files <- sapply(inp_files, "[[", 2)
inp_files <- sapply(inp_files, "[[", 2)
inp_files <- strsplit(inp_files,"/")
inp_files <- sapply(inp_files, "[[", 2)
####### Calculate yearle sum of exceedances
datadir <- "~/data/future_capacity/munic_csv/"
inp_f <- list.files(datadir,recursive = T,full.names = T)
inp_files <- list.files(datadir,recursive = T,full.names = F)
inp_files <- strsplit(inp_files,"/")
inp_files <- sapply(inp_files, "[[", 2)
csv_in <- read.csv(inp_f[1])
library(lubridate)
year(csv_in[,1])
csv_in_year <- year(csv_in[,1])
aggregate(csv_in,by=list(csv_in_year))
aggregate(csv_in,by=list(csv_in_year),FUN=sum
)
aggregate(csv_in,by=list(csv_in_year),FUN=sum)
aggregate(csv_in[,-1],by=list(csv_in_year),FUN=sum)
csv_out <- aggregate(csv_in[,-1],by=list(csv_in_year),FUN=sum)
colnames(csv_out[,1])
colnames(csv_out)
colnames(csv_out[1])
colnames(csv_out[1]) <- "Year"
colnames(csv_out)[1] <- "Year"
outdir <- "~/data/future_capacity/munic_csv/exc_ysum/"
for (i in c(1:length(inp_f))){
print(i)
csv_in <- read.csv(inp_f[i])
csv_in_year <- year(csv_in[,1])
csv_out <- aggregate(csv_in[,-1],by=list(csv_in_year),FUN=sum)
colnames(csv_out)[1] <- "Year"
write.csv(csv_in,paste0(outdir,substr(inp_files[i],1,nchar(inp_files[i])-4),"_ysum.csv"),row.names = F)
}
install.packages("startsExtra")
install.packages("starsExtra")
library(stars)
slope <- read_stars("/media/cschmidt/platti_ssd/data_large/at_lam_slope_perc.tif")
slope
st_layers("~/data/stat_aut/STATISTIK_AUSTRIA_RASTER_LAEA_3035.gpkg")
library(sf)
st_layers("~/data/stat_aut/STATISTIK_AUSTRIA_RASTER_LAEA_3035.gpkg")
aut_raststat <- st_read("~/data/stat_aut/STATISTIK_AUSTRIA_RASTER_LAEA_3035.gpkg",layer = "l010000")
aut_raststat
plot(aut_raststat)
print(aut_raststat)
library(sf)
st_read("~/data/stat_aut/pd_popreg_gem_7767c34b-302c-11e3-beb4-0000c1ab0db6.gml")
gml_in <- st_read("~/data/stat_aut/pd_popreg_gem_7767c34b-302c-11e3-beb4-0000c1ab0db6.gml")
gml_in$areaOfDissemination
plot(gml_in$areaOfDissemination)
gml_in$value
gml_in$areaOfDissemination
st_geometry(gml_in)
aut_shp <- st_read("~/data/shp/OGDEXT_GEM_1_STATISTIK_AUSTRIA_20230101/STATISTIK_AUSTRIA_GEM_20230101.shp")
aut_pop <- read.csv("~/data/stat_aut/gemeinden_2023.csv")
aut_shp$g_name
aut_pop$Gemeinde..Gebietsstand.1.1.2023.
aut_pop$X
aut_pop$X[1:2092]
aut_shp$g_name[1:1092]
aut_shp$g_name[1:2092]
aut_shp$g_name[1:2092]==aut_pop$X[1:2092]
aut_shp$g_name[1:2092]
aut_pop$X[1:2092]
aut_shp$g_name[1:2092]
aut_pop$X[1:2092]
aut_shp$g_name[1:2092]
aut_pop$X[1:2092]
aut_shp$g_name[1:2093]
aut_shp$g_name[2093]
aut_shp$g_name[2092]
aut_shp$g_name[2092]
aut_pop$X[1:2092]
aut_pop$X[2092]
aut_shp$g_name[2091]
aut_pop$X[2091]
aut_pop$X[1000]
aut_shp$g_name[1000]
aut_pop$X[1000]
st_area(aut_shp$geometry)
st_area(aut_shp$geometry) / 1000
st_area(aut_shp$geometry) / 1000 / 1000
st_area(aut_shp$geometry) / 1000 / 1000
aut_shape_area <- st_area(aut_shp$geometry) / 1000 / 1000
lastind <- 2093
aut_pop
aut_pop[,24]
aut_pop[1:lastind,24]
aut_pop[1:lastind,24] / aut_shape_area[1:lastind]
aut_pop[1:lastind,24] / aut_shape_area[1:lastind]
aut_pop_density <- aut_pop[1:lastind,24] / aut_shape_area[1:lastind]
plot(aut_pop_density)
lastind <- 2092
aut_shp$g_name[1:2093]
aut_pop$X[1:2092]
aut_shp$g_name[1000]
aut_pop$X[1000]
aut_shape_area <- st_area(aut_shp$geometry) / 1000 / 1000
aut_pop_density <- aut_pop[1:lastind,24] / aut_shape_area[1:lastind]
plot(aut_pop_density)
plot(aut_shp$geometry)
plot(aut_shp$geometry,col = aut_pop_density)
library(viridis)
cividis()
source("~/projects/attaino3/repos/attain_paper/code/plot_autstat/plot_autstat.R", echo=TRUE)
cividis(10)[aut_pop_density]
cividis(5000)[aut_pop_density]
plot(aut_shp$geometry,col = cividis(5000)[aut_pop_density])
library(sf)
library(viridis)
library(RColorBrewer)
library(mapsf)
setwd("~/projects/attaino3/repos/attain_paper/code/plot_autstat/")
aut_shp <- st_read("~/data/shp/OGDEXT_GEM_1_STATISTIK_AUSTRIA_20230101/STATISTIK_AUSTRIA_GEM_20230101.shp")
aut_shp_vienna <- aut_shp[2093:2115,]
aut_shp_districts <- st_read("~/data/shp/OGDEXT_POLBEZ_1_STATISTIK_AUSTRIA_20220101/STATISTIK_AUSTRIA_POLBEZ_20220101.shp")
aut_pop <- read.csv("~/data/stat_aut/gemeinden_2023.csv")
lastind <- 2092
aut_shp$g_name[1:2093]
aut_pop$X[1:2092]
aut_shp$g_name[1000]
aut_pop$X[1000]
aut_shp <- aut_shp[1:2092,]
aut_shape_area <- st_area(aut_shp$geometry) / 1000 / 1000
aut_pop_density <- aut_pop[1:lastind,24] / aut_shape_area[1:lastind]
plot(aut_pop_density)
my_colors <- brewer.pal(9, "Reds")
my_colors <- colorRampPalette(my_colors)(30)
my_colors <- my_colors[as.numeric(cut(aut_pop_density_norm,30))]
aut_pop_density_norm <-  as.numeric(aut_pop_density/max(aut_pop_density))
shp_col <- cividis(40)[cut(log(as.numeric(aut_pop_density)),40)]
plot(aut_shp$geometry[1:lastind],col = shp_col)
aut_shp$pop_density <- as.numeric(aut_pop_density[1:lastind])
mf_map(aut_shp,type="choro", var="pop_density",pal=cividis(13))
vienna <- cbind(aut_shp_districts[94,])
vienna$pop_density <- aut_pop[2093,24]/as.numeric(sum(st_area(aut_shp_vienna$geometry)) /1000 / 1000 )
colnames(vienna) <- colnames(aut_shp)
st_geometry(vienna) <- "geometry"
aut_shp <- rbind(aut_shp,vienna)
mf_theme("default")
mf_theme(bg="white")
png("pop_density_gemeinde.png")
mf_map(aut_shp,type="choro", var="pop_density",pal=cividis(13),cex=1.2)
dev.off()
?mf_map
png("pop_density_gemeinde.png")
mf_map(aut_shp,type="choro", var="pop_density",pal=cividis(13),cex=1.2, leg_title = "popultation density")
dev.off()
mf_map(aut_shp,type="choro", var="pop_density",pal=cividis(13),cex=1.2, leg_title = "popultation density")
mf_map(aut_shp,type="choro", var="pop_density",pal=cividis(13),cex=1.2, leg_title = paste0("popultation density ",expression(1 / km^{2
})))
?expression
mf_map(aut_shp,type="choro", var="pop_density",pal=cividis(13),cex=1.2, leg_title = paste0("popultation density ",expression(1/km^{2})))
mf_map(aut_shp,type="choro", var="pop_density",pal=cividis(13),cex=1.2, leg_title = paste0("popultation density ",expression(1/km^2)))
mf_map(aut_shp,type="choro", var="pop_density",pal=cividis(13),cex=1.2, leg_title = paste0("popultation density ",expression(km^-2)))
mf_map(aut_shp,type="choro", var="pop_density",pal=cividis(13),cex=1.2, leg_title = expression(paste(Delta," dmax O"[3]," [", mu, "g/", m^3,"]")))
mf_map(aut_shp,type="choro", var="pop_density",pal=cividis(13),cex=1.2, leg_title = expression(paste("Population denisty", m^-2)))
mf_map(aut_shp,type="choro", var="pop_density",pal=cividis(13),cex=1.2, leg_title = expression(paste("Population denisty ", km^-2)))
mf_map(aut_shp,type="choro", var="pop_density",pal=cividis(13),cex=1.2, leg_title = expression(paste("Population denisty ", 1/km^2)))
mf_map(aut_shp,type="choro", var="pop_density",pal=cividis(13),cex=1.2, leg_title = expression(paste("Population density ", 1/km^2)))
