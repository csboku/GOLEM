Bootstrap: docker
From: debian:12

%post
    export DEBIAN_FRONTEND=noninteractive

    echo "### Updating System and Installing Base Dependencies ###"
    apt-get update && apt-get upgrade -y
    apt-get install -y \
        build-essential \
        wget curl gnupg \
        ca-certificates \
        apt-transport-https \
        mpich \
        libnetcdf-dev libnetcdff-dev \
        libhdf5-dev \
        libpng-dev \
        zlib1g-dev \
        perl flex bison make cmake nano \
        python3 python3-pip \
        cdo nco git \
        tar unzip

    # Install AOCC (AMD Optimized C/C++ & Fortran Compilers)
    echo "### Installing AMD Optimizing Compilers (AOCC) ###"
    cd /tmp
    wget https://developer.amd.com/wordpress/media/files/aocc-compiler-4.0.0.tar
    tar -xf aocc-compiler-4.0.0.tar
    cd aocc-compiler-4.0.0
    ./install.sh

    # Install AMD AOCL (AMD Optimized Libraries)
    cd /tmp
    wget https://developer.amd.com/wordpress/media/files/aocl-linux-aocc-4.0.tar.gz
    tar -xf aocl-linux-aocc-4.0.tar.gz
    cd aocl-linux-aocc-4.0
    ./install.sh

    # Python packages for WRF-Chem processing
    pip3 install numpy scipy xarray netCDF4 matplotlib

    # Install KPP (Kinetic PreProcessor)
    echo "### Installing KPP (Kinetic PreProcessor) ###"
    cd /opt
    git clone https://github.com/wrf-model/KPP.git
    cd KPP

    # Set AMD compiler for KPP
    sed -i 's/^FC.*=.*$/FC = flang/' Makefile.defs
    sed -i 's/^CC.*=.*$/CC = clang/' Makefile.defs
    sed -i 's/^FFLAGS.*=.*$/FFLAGS = -cpp -fdefault-real-8 -O2/' Makefile.defs

    # Build KPP
    make

    # Add KPP to PATH
    echo "export PATH=/opt/KPP/bin:\$PATH" >> /etc/profile

    # Set up environment for AMD compilers
    cat >> /etc/profile << EOF
# AMD AOCC environment setup
source /opt/AMD/aocc-compiler-4.0.0/setenv_AOCC.sh

# AMD AOCL environment setup
source /opt/AMD/aocl/aocl-linux-aocc-4.0/aocc/amd-libs.cfg

# WRF-Chem environment
export WRF_DIR=/opt/wrfchem
export NETCDF=/usr
export HDF5=/usr
export PATH=/opt/wrfchem/bin:\$PATH

# AMD compiler settings
export FC=flang
export CC=clang
export CXX=clang++
export MPIFC=mpifort
export MPICC=mpicc

# AMD-optimized compiler flags
export FFLAGS='-O3 -march=znver3 -mtune=znver3 -mfma -mavx2 -fopenmp -ffast-math'
export CFLAGS='-O3 -march=znver3 -mtune=znver3 -mfma -mavx2 -fopenmp -ffast-math'
export LDFLAGS='-O3 -fopenmp'
EOF

    source /etc/profile

    # Create directories for WRFChem
    mkdir -p /opt/wrfchem/bin
    mkdir -p /opt/wrfchem/data
    mkdir -p /opt/wrfchem/tools

%environment
    source /etc/profile

%runscript
    exec /bin/bash

%help
    AMD-optimized container for WRFChem simulations on Debian 12.

    Features:
    - AMD Optimizing C/C++ & Fortran Compilers (AOCC)
    - AMD Optimized Libraries (AOCL)
    - MPICH for parallel processing
    - NetCDF and HDF5 libraries
    - Basic Python tools for data processing

    Recommended for AMD EPYC and Ryzen processors.

    To use: apptainer shell wrfchem-amd.sif

    Note: The default optimization is for Zen3 architecture (EPYC Milan/Ryzen 5000).
    For other AMD CPUs, adjust the -march and -mtune flags:
    - Zen1: -march=znver1 -mtune=znver1 (EPYC Naples/Ryzen 1000)
    - Zen2: -march=znver2 -mtune=znver2 (EPYC Rome/Ryzen 3000)
    - Zen3: -march=znver3 -mtune=znver3 (EPYC Milan/Ryzen 5000)
    - Zen4: -march=znver4 -mtune=znver4 (EPYC Genoa/Ryzen 7000)
