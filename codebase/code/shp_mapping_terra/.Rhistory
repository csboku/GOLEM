input_date <- as.Date(as.POSIXct(nctime*60,origin = or))
csv_in <- read.csv(csv_f[idx])
csv_in$date == input_date
ncin <- nc_open(nc_f[idx])
nctime <- ncvar_get(ncin,"time")
nctime_att <- ncatt_get(ncin,"time")
ncin <- nc_open(nc_f[idx])
nctime <- ncvar_get(ncin,"time")
nctime_att <- ncatt_get(ncin,"time")
or  <- substr(nctime_att$units,15,24)
input_date <- as.Date(as.POSIXct(nctime*60,origin = or))
input_date <- as.Date(as.POSIXct(nctime*60*60,origin = or))
csv_in$date <- input_date
View(csv_in)
input_date <- as.Date(as.POSIXct(nctime*60,origin = or))
input_date <- as.Date(as.POSIXct(nctime/60,origin = or))
input_date
input_date <- as.Date(as.POSIXct(nctime*60,origin = or))
input_date <- as.Date(as.POSIXct(nctime*60,origin = or))
input_date
input_date <- as.Date(as.POSIXct(nctime*60*60,origin = or))
input_date
csv_in <- read.csv(csv_f[idx])
input_date
input_date <- as.Date(as.POSIXct(nctime*60,origin = or))
nctime_att
input_date <- as.Date(as.POSIXct(nctime,origin = or))
input_date
input_date <- as.Date(as.POSIXct(nctime*180,origin = or))
input_date
input_date <- as.Date(as.POSIXct(nctime*60*24,origin = or))
input_date
input_date <- as.Date(as.POSIXct(nctime*60*48,origin = or))
tail(input_date)
?as.POSIXct
input_date <- as.Date(as.POSIXct(nctime*60*48,origin = or))
tail(input_date)
head(input_date)
source("~/projects/attaino3/repos/attain_paper/code/shp_mapping_terra/fix_dates_csv.R", echo=TRUE)
input_date[1:3]
input_date <- as.Date(as.POSIXct(nctime*60*24,origin = or))
tail(input_date)
head(input_date)
library(lubridate)
library(PCICt)
nctime_att
csv_f[idx]
ncin <- nc_open(nc_f[idx])
nctime <- ncvar_get(ncin,"time")
nctime_att <- ncatt_get(ncin,"time")
nctime_att
or  <- substr(nctime_att$units,15,24)
as.PCICt(nctime,cal = "noleap",origin = or)
as.PCICt(nctime*60,cal = "noleap",origin = or)
as.PCICt(nctime*60*24,cal = "noleap",origin = or)
input_date <- as.Date(as.PCICt(nctime*60*24,cal = "noleap",origin = or))
as.PCICt(nctime*60*24,cal = "noleap",origin = or, format="%d%m%Y)
as.PCICt(nctime*60*24,cal = "noleap",origin = or, format="%d%m%Y")
as.PCICt(nctime*60*24,cal = "noleap",origin = or, format="%d%m%Y")
input_date <- as.Date(as.POSIXct(nctime*60*24,origin = or))
input_date <- as.PCICt(nctime*60*24,cal = "noleap",origin = or, format="%d%m%Y")
tail(input_date)
head(input_date)
csv_in$date <- input_date
View(csv_in)
write.csv(csv_in,csv_f,row.names = F)
write.csv(csv_in,csv_f[idx],row.names = F)
idx=7
csv_f[idx]
ncin <- nc_open(nc_f[idx])
nctime <- ncvar_get(ncin,"time")
nctime_att <- ncatt_get(ncin,"time")
nctime_att
or  <- substr(nctime_att$units,15,24)
input_date <- as.Date(as.POSIXct(nctime*60*24,origin = or))
tail(input_date)
head(input_date)
csv_in <- read.csv(csv_f[idx])
csv_in$date <- input_date
write.csv(csv_in,csv_f[idx],row.names = F)
idx=8
csv_f[idx]
ncin <- nc_open(nc_f[idx])
nctime <- ncvar_get(ncin,"time")
nctime_att <- ncatt_get(ncin,"time")
nctime_att
or  <- substr(nctime_att$units,15,24)
as.PCICt(nctime*60*24,cal = "noleap",origin = or, format="%d%m%Y")
tail(input_date)
head(input_date)
input_date[1:3]
csv_in <- read.csv(csv_f[idx])
csv_in$date <- input_date
write.csv(csv_in,csv_f[idx],row.names = F)
idx=9
csv_f[idx]
ncin <- nc_open(nc_f[idx])
nctime <- ncvar_get(ncin,"time")
nctime_att <- ncatt_get(ncin,"time")
nctime_att
or  <- substr(nctime_att$units,15,24)
input_date <- as.Date(as.POSIXct(nctime*60*24,origin = or))
tail(input_date)
head(input_date)
input_date[1:3]
csv_in <- read.csv(csv_f[idx])
csv_in$date <- input_date
write.csv(csv_in,csv_f[idx],row.names = F)
idx=10
csv_f[idx]
ncin <- nc_open(nc_f[idx])
nctime <- ncvar_get(ncin,"time")
nctime_att <- ncatt_get(ncin,"time")
nctime_att
or  <- substr(nctime_att$units,15,24)
input_date <- as.PCICt(nctime*60*24,cal = "noleap",origin = or, format="%d%m%Y")
csv_in <- read.csv(csv_f[idx])
idx=11
csv_in <- read.csv(csv_f[idx])
library(ncdf4)
library(lubridate)
library(PCICt)
csvdata <- "~/data/attain/shp_mapped/district_mapped/exc/"
ncdata <- "~/data/attain/bias_corr_output_exc/"
csv_f <- list.files(csvdata,full.names = T)
nc_f <- list.files(ncdata,full.names = T)
csv_f
nc_f
idx=11
csv_f[idx]
idx=1
csv_f[idx]
ncin <- nc_open(nc_f[idx])
nctime <- ncvar_get(ncin,"time")
nctime_att <- ncatt_get(ncin,"time")
nctime_att
or  <- substr(nctime_att$units,15,24)
csv_in <- read.csv(csv_f[idx])
idx=2
csv_in <- read.csv(csv_f[idx])
idx=3
csv_in <- read.csv(csv_f[idx])
idx=4
idx=4
csv_f[idx]
csv_in$date <- input_date
csv_in <- read.csv(csv_f[idx])
idx=5
csv_f[idx]
ncin <- nc_open(nc_f[idx])
nctime <- ncvar_get(ncin,"time")
nctime_att <- ncatt_get(ncin,"time")
csv_in <- read.csv(csv_f[idx])
idx=6
csv_f[idx]
ncin <- nc_open(nc_f[idx])
csv_in <- read.csv(csv_f[idx])
ncin <- nc_open(nc_f[idx])
nctime <- ncvar_get(ncin,"time")
nctime_att <- ncatt_get(ncin,"time")
nctime_att
or  <- substr(nctime_att$units,15,24)
input_date <- as.PCICt(nctime*60*24,cal = "noleap",origin = or, format="%d%m%Y")
tail(input_date)
head(input_date)
csv_in <- read.csv(csv_f[idx])
csv_in$date <- input_date
write.csv(csv_in,csv_f[idx],row.names = F)
idx=7
csv_f[idx]
ncin <- nc_open(nc_f[idx])
csv_in <- read.csv(csv_f[idx])
nctime <- ncvar_get(ncin,"time")
nctime_att <- ncatt_get(ncin,"time")
nctime_att
or  <- substr(nctime_att$units,15,24)
as.PCICt(nctime*60*24,cal = "noleap",origin = or, format="%d%m%Y")
input_date <- as.Date(as.POSIXct(nctime*60*24,origin = or))
head(input_date)
tail(input_date)
csv_in <- read.csv(csv_f[idx])
csv_in$date <- input_date
write.csv(csv_in,csv_f[idx],row.names = F)
idx=8
csv_f[idx]
ncin <- nc_open(nc_f[idx])
csv_in <- read.csv(csv_f[idx])
idx=8
csv_f[idx]
ncin <- nc_open(nc_f[idx])
nctime <- ncvar_get(ncin,"time")
nctime_att <- ncatt_get(ncin,"time")
nctime_att
or  <- substr(nctime_att$units,15,24)
input_date <- as.PCICt(nctime*60*24,cal = "noleap",origin = or, format="%d%m%Y")
head(input_date)
tail(input_date)
csv_in <- read.csv(csv_f[idx])
csv_in$date <- input_date
write.csv(csv_in,csv_f[idx],row.names = F)
idx=9
csv_f[idx]
ncin <- nc_open(nc_f[idx])
csv_in <- read.csv(csv_f[idx])
idx=9
csv_f[idx]
ncin <- nc_open(nc_f[idx])
nctime <- ncvar_get(ncin,"time")
nctime_att <- ncatt_get(ncin,"time")
nctime_att
or  <- substr(nctime_att$units,15,24)
input_date <- as.Date(as.POSIXct(nctime*60*24,origin = or))
head(input_date)
tail(input_date)
csv_in <- read.csv(csv_f[idx])
csv_in$date <- input_date
write.csv(csv_in,csv_f[idx],row.names = F)
idx=10
csv_f[idx]
ncin <- nc_open(nc_f[idx])
nctime <- ncvar_get(ncin,"time")
csv_in <- read.csv(csv_f[idx])
library(terra)
library(RColorBrewer)
set_Polypath(FALSE)
setwd("~/projects/attaino3/repos/attain_paper/code/shp_mapping_terra/")
datadir <- "/home/cschmidt/data/attain/shp_mapped/district_mapped/mda8"
shp_district <- vect("~/data/shp/district_aut_lonlat/district_shp_lonlat.shp")
shp_district
inp_f <- list.files(datadir,full.names = T)
inp_files <- list.files(datadir,full.names = F)
csv_in <- read.csv(inp_f[1])
csv_in$date <- as.Date(csv_in$date)
year <- format(csv_in$date, format="%Y")
res <- aggregate(csv_in[,-c(1,2)],by = list(year), FUN = sum)
val <- as.numeric(res[1,-1])
colPal <- colorRampPalette(brewer.pal(10,"Spectral"))
mcol <- colPal(10)[as.numeric(cut(val,breaks = 10))]
plot(shp_district,col=mcol)
##########Fix missing columns in district
setwd("~/projects/attaino3/repos/attain_paper/code/shp_mapping_terra/repair")
datadir <- "/home/cschmidt/data/attain/shp_mapped/district_mapped/mda8/"
inp_files <- list.files(datadir)
inp_f <- list.files(datadir,full.names = T)
inp_f
csvin <- read.csv(inp_f[1])
all_miss <- apply(csvin, 2, function(x) all(is.na(x)))
missing_cols <- which(all_miss==T)
datadir <- "/home/cschmidt/data/attain/shp_mapped/county_mapped/mda8/"
inp_files <- list.files(datadir)
inp_f <- list.files(datadir,full.names = T)
inp_f
##### Benutze apply statt mean
i=57
floor(apply(csvin[c(i-2,i-1,i+1,i+2)], 1, mean,na.rm=T))
csvin <- read.csv(inp_f[1])
all_miss <- apply(csvin, 2, function(x) all(is.na(x)))
missing_cols <- which(all_miss==T)
##########Fix missing columns in district
setwd("~/projects/attaino3/repos/attain_paper/code/shp_mapping_terra/repair")
datadir <- "/home/cschmidt/data/attain/shp_mapped/county_mapped/mda8/"
inp_files <- list.files(datadir)
inp_f <- list.files(datadir,full.names = T)
inp_f
floor(apply(csvin[c(i-2,i-1,i+1,i+2)], 1, mean,na.rm=T))
csvin <- read.csv(inp_f[1])
all_miss <- apply(csvin, 2, function(x) all(is.na(x)))
missing_cols <- which(all_miss==T)
for(f in c(1:length(inp_f))){
print(f)
csvin <- read.csv(inp_f[f])
for(i in c(1:length(missing_cols))){
csvin[,missing_cols[i]] <- apply(csvin[,missing_cols[i]-2:missing_cols[i]+2], 1, mean,na.rm=T)
}
write.csv(csvin,inp_f[f],row.names=F)
}
datadir <- "/home/cschmidt/data/attain/shp_mapped/county_mapped/exc"
inp_files <- list.files(datadir)
inp_f <- list.files(datadir,full.names = T)
inp_f
for(f in c(1:length(inp_f))){
print(f)
csvin <- read.csv(inp_f[f])
for(i in c(1:length(missing_cols))){
csvin[,missing_cols[i]] <- floor(apply(csvin[,missing_cols[i]-2:missing_cols[i]+2], 1, mean,na.rm=T))
}
write.csv(csvin,inp_f[f],row.names=F)
}
###### Calculate yearly mean for Exceedances on the district
setwd("~/projects/attaino3/repos/attain_paper/code/shp_mapping_terra/")
datadir <- "~/data/attain/shp_mapped/district_mapped/exc/"
inp_f <- list.files(datadir,full.names = T)
inp_files <- list.files(datadir,full.names = F)
inp_files
csvin <- read.csv(inp_f[1])
csvin$date <- as.Date(csvin$date)
year <- format(csvin$date, format="%Y")
csv_out <- aggregate(csv_in[,-c(1,2)],by = list(year), FUN = sum)
for (i in c(1:length(inp_f))) {
csvin <- read.csv(inp_f[i])
csvin$date <- as.Date(csvin$date)
year <- format(csvin$date, format="%Y")
csv_out <- aggregate(csvin[,-c(1,2)],by = list(year), FUN = sum)
write.csv(csv_out,paste0(substr(inp_files[i],1,nchar(inp_files[i])-4),"_ymean.csv"),row.names = F)
}
dist_f <- "~/data/attain/shp_mapped/district_mapped/mda8/"
dist_f <- "~/data/attain/shp_mapped/district_mapped/mda8/"
coun_f <- "~/data/attain/shp_mapped/county_mapped/mda8/"
dist_dir <- "~/data/attain/shp_mapped/district_mapped/mda8/"
coun_dir <- "~/data/attain/shp_mapped/county_mapped/mda8/"
dist_f <- list.files(dist_dir,full.names = T)
dist_dir <- "~/data/attain/shp_mapped/district_mapped/mda8/"
coun_dir <- "~/data/attain/shp_mapped/county_mapped/mda8/"
dist_f <- list.files(dist_dir,full.names = T)
coun_f <- list.files(coun_dir,full.names = T)
read.csv(dist_f[1])
d_csv <- read.csv(dist_f[1])
c_csv <- read.csv(coun_f[1])
c_csv$date
c_csv$date == d_csv$date
c_csv$date <- d_csv$date
dist_dir <- "~/data/attain/shp_mapped/district_mapped/mda8/"
coun_dir <- "~/data/attain/shp_mapped/county_mapped/mda8/"
dist_f <- list.files(dist_dir,full.names = T)
coun_f <- list.files(coun_dir,full.names = T)
dist_dir <- "~/data/attain/shp_mapped/district_mapped/mda8/"
coun_dir <- "~/data/attain/shp_mapped/county_mapped/mda8/"
dist_f <- list.files(dist_dir,full.names = T)
coun_f <- list.files(coun_dir,full.names = T)
d_csv <- read.csv(dist_f[1])
c_csv <- read.csv(coun_f[1])
c_csv$date == d_csv$date
for (i in c(1:length(d_csv))) {
print(i)
d_csv <- read.csv(dist_f[i])
c_csv <- read.csv(coun_f[i])
c_csv$date <- d_csv$date
write.csv(c_csv,coun_f[i],row.names = F)
}
dist_dir <- "~/data/attain/shp_mapped/district_mapped/exc/"
coun_dir <- "~/data/attain/shp_mapped/county_mapped/exc/"
dist_f <- list.files(dist_dir,full.names = T)
coun_f <- list.files(coun_dir,full.names = T)
d_csv <- read.csv(dist_f[1])
c_csv <- read.csv(coun_f[1])
c_csv$date == d_csv$date
dist_dir <- "~/data/attain/shp_mapped/district_mapped/exc/"
coun_dir <- "~/data/attain/shp_mapped/county_mapped/exc/"
dist_f <- list.files(dist_dir,full.names = T)
coun_f <- list.files(coun_dir,full.names = T)
d_csv <- read.csv(dist_f[1])
c_csv <- read.csv(coun_f[1])
c_csv$date == d_csv$date
for (i in c(1:length(dist_f))) {
print(i)
d_csv <- read.csv(dist_f[i])
c_csv <- read.csv(coun_f[i])
c_csv$date <- d_csv$date
write.csv(c_csv,coun_f[i],row.names = F)
}
###### Calculate yearly mean for Exceedances on the district
setwd("~/projects/attaino3/repos/attain_paper/code/shp_mapping_terra/")
datadir <- "~/data/attain/shp_mapped/county_mapped/exc/"
inp_f <- list.files(datadir,full.names = T)
###### Calculate yearly mean for Exceedances on the district
setwd("~/projects/attaino3/repos/attain_paper/code/shp_mapping_terra/")
datadir <- "~/data/attain/shp_mapped/county_mapped/exc/"
inp_f <- list.files(datadir,full.names = T)
inp_files <- list.files(datadir,full.names = F)
inp_files
csvin <- read.csv(inp_f[1])
csvin$date <- as.Date(csvin$date)
year <- format(csvin$date, format="%Y")
csv_out <- aggregate(csv_in[,-c(1,2)],by = list(year), FUN = sum)
for (i in c(1:length(inp_f))) {
csvin <- read.csv(inp_f[i])
csvin$date <- as.Date(csvin$date)
year <- format(csvin$date, format="%Y")
csv_out <- aggregate(csvin[,-c(1,2)],by = list(year), FUN = sum)
write.csv(csv_out,paste0(substr(inp_files[i],1,nchar(inp_files[i])-4),"_ymean.csv"),row.names = F)
}
###### Calculate yearly mean for Exceedances on the district
setwd("~/projects/attaino3/repos/attain_paper/code/shp_mapping_terra/")
datadir <- "~/data/attain/shp_mapped_spatial/county_mapped/"
inp_f <- list.files(datadir,full.names = T)
inp_files <- list.files(datadir,full.names = F)
inp_files
csvin <- read.csv(inp_f[1])
csvin$date <- as.Date(csvin$date)
year <- format(csvin$date, format="%Y")
csv_out <- aggregate(csv_in[,-c(1,2)],by = list(year), FUN = sum)
for (i in c(1:length(inp_f))) {
csvin <- read.csv(inp_f[i])
csvin$date <- as.Date(csvin$date)
year <- format(csvin$date, format="%Y")
csv_out <- aggregate(csvin[,-c(1,2)],by = list(year), FUN = sum)
write.csv(csv_out,paste0(substr(inp_files[i],1,nchar(inp_files[i])-4),"_ymean.csv"),row.names = F)
}
csvin <- read.csv(inp_f[i])
datadir <- "~/data/attain/shp_mapped_spatial/county_mapped/exc"
inp_f <- list.files(datadir,full.names = T)
inp_files <- list.files(datadir,full.names = F)
inp_files
csvin <- read.csv(inp_f[1])
csvin$date <- as.Date(csvin$date)
for (i in c(1:length(inp_f))) {
csvin <- read.csv(inp_f[i])
csvin$date <- as.Date(csvin$date)
year <- format(csvin$date, format="%Y")
csv_out <- aggregate(csvin[,-c(1,2)],by = list(year), FUN = sum)
write.csv(csv_out,paste0(substr(inp_files[i],1,nchar(inp_files[i])-4),"_ymean.csv"),row.names = F)
}
#### Version for other date colname
for (i in c(1:length(inp_f))) {
csvin <- read.csv(inp_f[i])
csvin$csv_in.Date <- as.Date(csvin$csv_in.Date)
year <- format(csvin$csv_in.Date, format="%Y")
csv_out <- aggregate(csvin[,-c(1,2)],by = list(year), FUN = sum)
write.csv(csv_out,paste0(substr(inp_files[i],1,nchar(inp_files[i])-4),"_ymean.csv"),row.names = F)
}
datadir <- "~/data/attain/shp_mapped_grid/county_mapped/exc/"
inp_f <- list.files(datadir,full.names = T)
inp_files <- list.files(datadir,full.names = F)
inp_files
csvin <- read.csv(inp_f[1])
for (i in c(1:length(inp_f))) {
csvin <- read.csv(inp_f[i])
csvin$date <- as.Date(csvin$date)
year <- format(csvin$date, format="%Y")
csv_out <- aggregate(csvin[,-c(1)],by = list(year), FUN = sum)
write.csv(csv_out,paste0(substr(inp_files[i],1,nchar(inp_files[i])-4),"_ymean.csv"),row.names = F)
}
###### Calculate yearly mean for Exceedances on the district
setwd("~/projects/attaino3/repos/attain_paper/code/shp_mapping_terra/")
datadir <- "~/data/attain/shp_mapped_grid/county_mapped/exc/"
inp_f <- list.files(datadir,full.names = T)
inp_files <- list.files(datadir,full.names = F)
inp_files
csvin <- read.csv(inp_f[1])
csvin$date <- as.Date(csvin$date)
year <- format(csvin$date, format="%Y")
csv_out <- aggregate(csv_in[,-c(1,2)],by = list(year), FUN = sum)
for (i in c(1:length(inp_f))) {
csvin <- read.csv(inp_f[i])
csvin$date <- as.Date(csvin$date)
year <- format(csvin$date, format="%Y")
csv_out <- aggregate(csvin[,-c(1)],by = list(year), FUN = sum)
write.csv(csv_out,paste0(substr(inp_files[i],1,nchar(inp_files[i])-4),"_ymean.csv"),row.names = F)
}
datadir <- "~/data/attain/shp_mapped_grid/district_mapped/exc/"
inp_f <- list.files(datadir,full.names = T)
inp_files <- list.files(datadir,full.names = F)
inp_files
csvin <- read.csv(inp_f[1])
csvin$date <- as.Date(csvin$date)
inp_files
csvin <- read.csv(inp_f[1])
csvin$date <- as.Date(csvin$date)
year <- format(csvin$date, format="%Y")
csv_out <- aggregate(csv_in[,-c(1,2)],by = list(year), FUN = sum)
for (i in c(1:length(inp_f))) {
csvin <- read.csv(inp_f[i])
csvin$date <- as.Date(csvin$date)
year <- format(csvin$date, format="%Y")
csv_out <- aggregate(csvin[,-c(1)],by = list(year), FUN = sum)
write.csv(csv_out,paste0(substr(inp_files[i],1,nchar(inp_files[i])-4),"_ymean.csv"),row.names = F)
}
###### Calculate yearly mean for Exceedances on the district
setwd("~/projects/attaino3/repos/attain_paper/code/shp_mapping_terra/")
datadir <- "~/data/attain/shp_mapped_spatial/county_mapped/exc/"
inp_f <- list.files(datadir,full.names = T)
inp_files <- list.files(datadir,full.names = F)
inp_files
csvin <- read.csv(inp_f[1])
for (i in c(1:length(inp_f))) {
csvin <- read.csv(inp_f[i])
csvin$date <- as.Date(csvin$date)
year <- format(csvin$date, format="%Y")
csv_out <- aggregate(csvin[,-c(1,2)],by = list(year), FUN = sum)
write.csv(csv_out,paste0(substr(inp_files[i],1,nchar(inp_files[i])-4),"_ymean.csv"),row.names = F)
}
#### Version for other date colname
for (i in c(1:length(inp_f))) {
csvin <- read.csv(inp_f[i])
csvin$csv_in.Date <- as.Date(csvin$csv_in.Date)
year <- format(csvin$csv_in.Date, format="%Y")
csv_out <- aggregate(csvin[,-c(1,2)],by = list(year), FUN = sum)
write.csv(csv_out,paste0(substr(inp_files[i],1,nchar(inp_files[i])-4),"_ymean.csv"),row.names = F)
}
datadir <- "~/data/attain/shp_mapped_spatial/district_mapped/exc/"
inp_f <- list.files(datadir,full.names = T)
inp_files <- list.files(datadir,full.names = F)
inp_files
csvin <- read.csv(inp_f[1])
#### Version for other date colname
for (i in c(1:length(inp_f))) {
csvin <- read.csv(inp_f[i])
csvin$Date <- as.Date(csvin$Date)
year <- format(csvin$Date, format="%Y")
csv_out <- aggregate(csvin[,-c(1,2)],by = list(year), FUN = sum)
write.csv(csv_out,paste0(substr(inp_files[i],1,nchar(inp_files[i])-4),"_ymean.csv"),row.names = F)
}
csv_out <- aggregate(csvin[,-c(1)],by = list(year), FUN = sum)
write.csv(csv_out,paste0(substr(inp_files[i],1,nchar(inp_files[i])-4),"_ymean.csv"),row.names = F)
#### Version for other date colname
for (i in c(1:length(inp_f))) {
csvin <- read.csv(inp_f[i])
csvin$Date <- as.Date(csvin$Date)
year <- format(csvin$Date, format="%Y")
csv_out <- aggregate(csvin[,-c(1)],by = list(year), FUN = sum)
write.csv(csv_out,paste0(substr(inp_files[i],1,nchar(inp_files[i])-4),"_ymean.csv"),row.names = F)
}
